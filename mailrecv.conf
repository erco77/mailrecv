# mailrecv's config file.

#     debug <flags>
#
#     Sets the debug logging flags.
#     Can be one or more of these single letter flags.
#
#        - -- disables all debug logging
#        a -- all (enables all optional flags)
#        c -- show config file loading process
#        s -- show SMTP commands remote sent us
#	 l -- show email contents as it's received (SMTP 'DATA' command's input)
#        r -- show regex pattern match checks
#	 f -- show all open/close operations on files/pipes
#        w -- log non-essential warnings
#        + -- one line mail from/to/handler info (RECOMMENDED)
#	 F -- fail2ban (includes IP in errors common to ban)
#
#     Example: debug csr+	-- show config, smtp cmds, regex matches and one line from/to info
#
debug +

#     logfile syslog|<filename>
#
#     Sets optional filename to append all log messages to.
#     Default is 'syslog', which logs to the system log via syslog(3).
#
logfile syslog

#     loghex on|off
#
#     Enables logging binary data in hex, instead of as raw data.
#     Helps prevent fail2ban from barfing on binary data from remotes.
#     Default is 'off', to ensure logs reflect actual content from remote.
#
loghex off

#     domain <domain_name>
#
#     Sets the domain name for this server to know itself as.
#
domain example.com

#     deadletter_file <filename>
#
#     Where to write received email that has no configured recipient.
#     This can either be a file, or /dev/null to simply throw them away..
#
deadletter_file /dev/null

# Limits
limit.smtp_commands   25       500 Too many SMTP commands received in session
limit.smtp_unknowncmd 4        500 Too many bad commands
limit.smtp_failcmds   4        500 Too many failed commands
limit.connection_secs 600      500 Connection timeout
limit.smtp_data_size  24000000 552 Too much mail data
limit.smtp_rcpt_to    5        452 Too many recipients (RFC 2821 4.5.3.1)
limit.smtp_ascii      1        500 Binary data (non-ASCII) unsupported

#      allowgroup <name> <regex>
#
#      Defines a group <name> comprised of one or more regular expressions.
#      These groups can then be referenced in 'deliver' commands, to allow
#      only certain servers to send to certain email addresses.
#
#      Examples:
#          allowgroup +mygroup  ^mail[1234].somewhere.com$
#          allowgroup +mygroup  ^126.208.135.\d+$
#          allowgroup +xyzgroup ^mail0[1-9].mailguys.org$
#          allowgroup +xyzgroup ^smtp[1-9].altmail.org$
#          allowgroup +xyzgroup ^133.33.44.[12345]$

#      deliver [allowgroup <grpname>] rcpt_to <email_address> append <filename>
#
#      Delivers mail sent to <email_address> by appending the letter to <filename>.
#      Examples:
#          deliver rcpt_to test@example.com append /tmp/test.txt
#          deliver allowgroup +mygroup rcpt_to test@example.com append /tmp/test.txt

#     deliver [allowgroup <grpname>] rcpt_to <email_address> pipe <sh_command>
#
#     Delivers mail sent to <email_address> by piping the letter to <sh_command>.
#     <sh_command> should read stdin to receive the email message.
#
#     Examples:
#          deliver rcpt_to pipe123@example.com pipe /bin/cat >> /dev/null"
#          deliver allowgroup +xyzgroup rcpt_to pipe186@example.com pipe /bin/grep -n '.*' >> /tmp/pipe.txt

#     error rcpt_to <email_address> <SMTP-errcode> <Error message>
#
#     All mail sent to <email_address> generates the SMTP error code and error message.
#     <SMTP-errcode> must be a 3 digit SMTP error code (RFC#821). Normally use 550.
#     <Error message> continues to the end of line.
#
#     Example:
#         error rcpt_to bugs@example.com 550 This address has been disabled. Use http://example.com/bugs to report bugs

#     replace rcpt_to <regex> <new_string>
#
#     Replace the entire matching "rcpt_to" address "pipe123@example.com" with "xxx@example.com"
#     Useful to prevent the mail archive exposing its gateway email address.
#     The match string is a perl regex (perl regular expression), see 'man perlre'.
#
#     Example:
#         replace rcpt_to pipe[0-9]*@example\.com xxx@example.com

#     allow remotehost <regex>
#
#     Only allow connections from servers whose reverse hostname lookups/ip addresses
#     match the perl <regex> strings. The leading ^ and trailing $ are /required/ to
#     anchor the search to the beginning + end of the string. See 'man perlre'.
#
#     Examples:
#         allow remotehost ^mail\d+*.abc.com$      # e.g. "mail5.abc.com" but NOT "mail5.abc.com.badguy.com"
#         allow remotehost ^mail[0-9]*.foo.com$    # e.g. "mail002.foo.com"
#         allow remotehost ^192\.168\.0\..*$       # e.g. 192.168.0.*
#         allow remotehost ^192\.16[789]\.0\..*$   # e.g. 192.167.0.*, 192.168.0.*, 192.169.0.*
