# mailrecv's config file.

#     debug <flags>
#
#     Sets the debugging flags. - for none (default).
#     Can be any combination of:
#
#	 a -- all debugging flags enabled
#	 c -- show config file commands loaded
#	 s -- show SMTP commands remote sent us
#	 l -- show email contents (SMTP 'DATA' command's input)
#	 r -- show regex pattern match checks
#	 f -- show all open/close operations on files/pipes
#
#     Example: debug csr		-- show config, smtp cmds, and regex matches
#
debug -

#     domain <domain_name>
#
#     Sets the domain name for this server to know itself as.
#
domain example.com

#     deadletter_file <filename>
#
#     Where to write received email that has no configured recipient.
#     This can either be a file, or /dev/null to simply throw them away..
#
deadletter_file /dev/null

#      deliver rcpt_to <email_address> append <filename>
#
#      Delivers mail sent to <email_address> by appending the letter to <filename>.
#      Example:
#
# deliver rcpt_to test@example.com append /tmp/test.txt

#     deliver rcpt_to <email_address> pipe <sh_command>
#
#     Delivers mail sent to <email_address> by piping the letter to <sh_command>.
#     <sh_command> should read stdin to receive the email message.
#
#     Examples:
#
# deliver rcpt_to pipe123@example.com pipe /bin/cat >> /dev/null"
# deliver rcpt_to pipe186@example.com pipe /bin/grep -n '.*' >> /tmp/pipe.txt

#     error rcpt_to <email_address> <SMTP-errcode> <Error message>
#
#     All mail sent to <email_address> generates the SMTP error code and error message.
#     <SMTP-errcode> must be a 3 digit SMTP error code (RFC#821). Normally use 550.
#     <Error message> continues to the end of line.
#
# error rcpt_to bugs@example.com 550 This address has been disabled. Use http://example.com/bugs to report bugs

#     replace rcpt_to <regex> <new_string>
#
#     Replace the entire matching "rcpt_to" address "pipe123@example.com" with "xxx@example.com"
#     Useful to prevent the mail archive exposing its gateway email address.
#     The match string is a perl regex (perl regular expression), see 'man perlre'.
#
#     Example:
#
# replace rcpt_to pipe[0-9]*@example\.com xxx@example.com

#     allow remotehost <regex>
#     allow remoteip   <regex>
#
#     Only allow connections from servers whose reverse hostname lookups/ip addresses
#     match the perl <regex> strings. The leading ^ and trailing $ are /required/ to
#     anchor the search to the beginning + end of the string. See 'man perlre'.
#
#     Examples:
#
# allow remotehost ^mail[a-zA-z0-9-]*.example.com$      # e.g. "mail-f185.example.com", but NOT "mail-f185.example.com.foo.com"
# allow remotehost ^mail[0-9]*.foo.com$                 # e.g. "mail002.foo.com"
# allow remoteip   ^192\.168\.0\..*$                    # e.g. 192.168.0.*
# allow remoteip   ^192\.16[789]\.0\..*$                # e.g. 192.167.0.*, 192.168.0.*, 192.169.0.*
